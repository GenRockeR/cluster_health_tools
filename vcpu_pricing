<form>
  <label>vCPU pricing</label>
  <fieldset submitButton="false">
    <input type="checkbox" token="show_base_searches">
      <label></label>
      <choice value="show_base_searches">Show discovery searches</choice>
      <delimiter> </delimiter>
    </input>
  </fieldset>
  <init>
    <set token="_internal">index=_internal OR index=core_splunk_internal</set>
  </init>
  <row>
    <panel>
      <html>
    <h1>What is this dashboard and how do I use it?</h1>
    This dashboard as been created by Richard Morgan, a Principal architect in EMEA to discover the base data required for vCPU billing. <p/>
    To install, simply create a new dashboard and paste in the contents. You might find a newer version <a href="https://raw.githubusercontent.com/silkyrich/cluster_health_tools/master/vcpu_pricing">here</a>
        <p/>
    The dashboard works by running a search that counts the vCPU count and utilization for each host introspection. On its own this information doesn't include the role of the host and various other searches are run to reverse engineer the role of the component. You can see these discovery searches by checking the box "show discovery searches" where you can also modify the function used to calculate usage, but default it is set to p99<p/>
    On a sunny day this will produce very accurate results, however there are many things that might go wrong. Data might be missing, the discovery searches might not be compatiable with newer versions of splunk, the customer may have miss classified their components. Therefore this dashboard is provided as is, and your milage may vary. Should have any questions please email the author rmorgan@splunk.com, but remember to debug I will need screen share access to the live enviroment.<p/>
  </html>
    </panel>
  </row>
  <row depends="$show_base_searches$">
    <panel>
      <title>introspection_vcpu_count - $introspection_vcpu_count$</title>
      <input type="dropdown" token="avg_function">
        <label>Calculation for average</label>
        <choice value="avg">mean</choice>
        <choice value="mode">mode</choice>
        <choice value="median">median</choice>
        <choice value="p90">p90</choice>
        <choice value="p95">p95</choice>
        <choice value="p99">p99</choice>
        <default>p99</default>
      </input>
      <table>
        <title>Collects the vCPU count from _introspection</title>
        <search id="introspection_vcpu_count">
          <progress>
            <unset token="introspection_vcpu_count"></unset>
          </progress>
          <done>
            <set token="introspection_vcpu_count">$job.sid$</set>
          </done>
          <query>index=_introspection component=hostwide 
| eval cpu_usage_pct='data.cpu_system_pct'+'data.cpu_user_pct'
| stats 
    values(data.cpu_count) as cpu_count
    values(data.virtual_cpu_count) as vcpu_count
    values(data.splunk_version) as introspection_splunk_version
    values(data.os_version) as introspection_os_version
    $avg_function$(cpu_usage_pct) as avg_cpu_usage_pct
    by host data.instance_guid 
| rename data.instance_guid as guid</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="count">1</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">none</option>
        <option name="percentagesRow">false</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">false</option>
        <option name="totalsRow">false</option>
        <option name="wrap">true</option>
      </table>
    </panel>
    <panel>
      <title>tcpin_connections $tcpin_connections$</title>
      <table>
        <title>Collects information about components acting as a HWF (can be a CM, LM, SH etc)</title>
        <search>
          <progress>
            <unset token="tcpin_connections"></unset>
          </progress>
          <done>
            <set token="tcpin_connections">$job.sid$</set>
          </done>
          <query>$_internal$ Metrics sourcetype=splunkd TERM(group=tcpin_connections) earliest=-15min latest=now TERM(fwdType=full)
| stats 
    values(connectionType) as connectionType
    values(arch) as arch
    values(version) as version
    values(fwdType) as fwdType
    values(os) as os
    by hostname guid
| table *
| rename hostname as host</query>
          <earliest>-15m</earliest>
          <latest>now</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="count">1</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">none</option>
        <option name="percentagesRow">false</option>
        <option name="rowNumbers">false</option>
        <option name="totalsRow">false</option>
        <option name="wrap">true</option>
      </table>
    </panel>
    <panel>
      <title>metrics_instance - $metrics_instance$</title>
      <table>
        <title>data mines the component classification, doesn't normally include a HWF</title>
        <search id="metrics_instance">
          <progress>
            <unset token="metrics_instance"></unset>
          </progress>
          <done>
            <set token="metrics_instance">$job.sid$</set>
          </done>
          <query>$_internal$ earliest=-90min latest=now sourcetype=splunkd Metrics TERM(group=instance) TERM(name=instance) (deployment_client OR cluster_search_head OR search_head OR indexer OR cluster_slave OR search_peer OR license_master) NOT(universal_forwarder)
| stats 
    count 
    values(instance_roles) as roles 
    values(index_cluster_label) as idx_cluster_name
    by instance_guid server_name 
| eval mv_roles=split(roles, ", ") 
| eval idx_cluster_name=if(idx_cluster_name="none", "", idx_cluster_name)
| stats 
    count(eval(mv_roles="indexer")) as role_indexer
    count(eval(mv_roles="search_peer")) as role_search_peer
    count(eval(mv_roles="cluster_search_head")) as role_cluster_search_head
    count(eval(mv_roles="search_head")) as role_search_head
    count(eval(mv_roles="cluster_slave")) as role_cluster_slave
    count(eval(mv_roles="kv_store")) as role_kv_store_role 
    count(eval(mv_roles="cluster_master")) as role_cluster_master
    count(eval(mv_roles="license_master")) as role_license_master
    count(eval(mv_roles="deployment_server_master")) as role_deployment_server
    count(eval(mv_roles="deployment_client")) as role_deployment_client
    count(eval(mv_roles="shc_captain")) as role_shc_captain
    count(eval(mv_roles="shc_member")) as role_shc_member
    by instance_guid server_name roles idx_cluster_name
| rename instance_guid as guid 
| rename server_name as host</query>
          <earliest>-4h@m</earliest>
          <latest>now</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="count">1</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">none</option>
        <option name="percentagesRow">false</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">false</option>
        <option name="totalsRow">false</option>
        <option name="wrap">true</option>
      </table>
    </panel>
    <panel>
      <title>license_usage $license_usage$</title>
      <table>
        <title>license_usage $license_usage$</title>
        <search>
          <progress>
            <unset token="license_usage"></unset>
          </progress>
          <done>
            <set token="license_usage">$job.sid$</set>
          </done>
          <query>$_internal$ sourcetype=splunkd source=*license_usage.log TERM(type=RolloverSummary) NOT (licenseGroup=Trial)
| bin span=1d@d _time
| eval key="usage_".licenseGroup."_".productType
| stats values(eval(b/1024/1024/1024)) as gb by key _time slave
| stats p90(gb) as gb by key slave
| eval gb=round(gb,0)
| rename slave as guid
| xyseries guid key gb</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </search>
        <option name="count">1</option>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Total vCPU billable / non-billable</title>
      <single>
        <search base="classified_hosts">
          <query>| stats sum(eval(if(billable=1,vcpu_count,0))) as total_billable_vcpu 
    sum(eval(if(billable=0,vcpu_count,0))) as total_unbillable_vcpu 
| eval label=total_billable_vcpu."/".total_unbillable_vcpu
| fields label</query>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </single>
    </panel>
    <panel>
      <title>vCPU in active use according to $avg_function$</title>
      <single>
        <search base="summarized_usage">
          <query>| stats sum(vCPU_used)</query>
        </search>
        <option name="drilldown">none</option>
      </single>
    </panel>
    <panel>
      <title>Licences detected</title>
      <table>
        <search>
          <query>$_internal$ sourcetype=splunkd source=*license_usage.log TERM(type=RolloverSummary) NOT (licenseGroup=Trial) earliest=-25hrs latest=now
| stats count by productType licenseGroup subgroupId
| table productType licenseGroup subgroupId</query>
          <earliest>-7d@h</earliest>
          <latest>now</latest>
        </search>
        <option name="count">10</option>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Billable roles to vCPU count with utilisation measure</title>
      <table>
        <search base="classified_hosts" id="summarized_usage">
          <query>| where billable=1
| eval cpu_used=vcpu_count*(avg_cpu_usage_pct)/100
| stats count as instances 
    sum(vcpu_count) as total_vCPU
    sum(cpu_used) as vCPU_used
    median(avg_cpu_usage_pct) as avg_cpu_usage_pct
    avg(usage_*) as lic_*
    by primary_role idx_cluster_name
| table primary_role idx_cluster_name instances total_vCPU avg_cpu_usage_pct vCPU_used lic_*
| foreach lic_* [| eval &lt;&lt;FIELD&gt;&gt;=round(&lt;&lt;FIELD&gt;&gt;,0) ]</query>
        </search>
        <option name="count">100</option>
        <option name="dataOverlayMode">none</option>
        <option name="refresh.display">progressbar</option>
        <format type="number" field="avg_cpu_usage_pct">
          <option name="precision">0</option>
          <option name="unit">%</option>
        </format>
        <format type="number" field="vCPU_used">
          <option name="precision">0</option>
        </format>
        <format type="color" field="instances">
          <colorPalette type="minMidMax" maxColor="#31A35F" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="number" field="total_vCPU">
          <option name="precision">0</option>
        </format>
        <format type="color" field="total_vCPU">
          <colorPalette type="minMidMax" maxColor="#31A35F" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="avg_cpu_usage_pct">
          <colorPalette type="list">[#65A637,#6DB7C6,#F7BC38,#F58F39,#D93F3C]</colorPalette>
          <scale type="threshold">0,30,70,100</scale>
        </format>
        <format type="color" field="vCPU_used">
          <colorPalette type="minMidMax" maxColor="#31A35F" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="number" field="lic_Enterprise_enterprise">
          <option name="precision">0</option>
        </format>
        <format type="color" field="lic_Enterprise_enterprise">
          <colorPalette type="minMidMax" maxColor="#31A35F" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>The summarised inventory list with vCPU please export and bring home</title>
      <table>
        <search id="classified_hosts">
          <query>| union 
    [| loadjob $metrics_instance$ ] 
    [| loadjob $tcpin_connections$ ] 
    [| loadjob $introspection_vcpu_count$ ] 
    [| loadjob $license_usage$ ] 
| stats values(*) as * by guid 
| eval primary_role=case(role_indexer=1,"indexer",
    role_cluster_master=1,"cluster_master",
    role_cluster_search_head=1,"search_head_cluster",
    role_search_head=1,"search_head",
    fwdType="full","heavy_forwarder",
    role_license_master=1,"license_master",
    role_deployment_server_master=1,"deployment_server_master"
    ) 
| eval billable=case(primary_role="indexer", 1,
    primary_role="cluster_master", 0,
    primary_role="search_head", 1,
    primary_role="search_head_cluster", 1,
    primary_role="heavy_forwarder", 1,
    primary_role="license_master", 0,
    primary_role="deployment_server_master",0
    ) 
| table host guid primary_role idx_cluster_name billable avg_cpu_usage_pct cpu_count vcpu_count introspection_splunk_version usage*
| rename introspection_splunk_version as splunk_version</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </search>
        <option name="count">10</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <format type="color" field="vcpu_count">
          <colorPalette type="minMidMax" maxColor="#31A35F" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="cpu_count">
          <colorPalette type="sharedList"></colorPalette>
          <scale type="sharedCategory"></scale>
        </format>
        <format type="number" field="avg_cpu_usage_pct">
          <option name="precision">0</option>
          <option name="unit">%</option>
        </format>
        <format type="color" field="avg_cpu_usage_pct">
          <colorPalette type="list">[#65A637,#6DB7C6,#F7BC38,#F58F39,#D93F3C]</colorPalette>
          <scale type="threshold">0,30,70,100</scale>
        </format>
        <format type="color" field="usage_Enterprise_enterprise">
          <colorPalette type="minMidMax" maxColor="#31A35F" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
      </table>
    </panel>
  </row>
</form>
