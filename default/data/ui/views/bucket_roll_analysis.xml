<form>
  <label>Bucket roll analysis</label>
  <search id="freeze_base">
    <query>index=_internal $selected_indexers$ source=*splunkd.log sourcetype=splunkd freeze completed succesfully
| rex field=bid "(?&lt;idx&gt;[^~]+)"
| table size _time idx host
</query>
    <earliest>$time.earliest$</earliest>
    <latest>$time.latest$</latest>
    <progress>
      <unset token="freeze_base"></unset>
    </progress>
    <done>
      <set token="freeze_base">$job.sid$</set>
    </done>
  </search>
  <search>
    <query>|makeresults</query>
    <earliest>$time.earliest$</earliest>
    <latest>$time.latest$</latest>
    <progress>
      <eval token="seconds_for_bin">if((round(relative_time(now(), $time.latest$)-relative_time(now(), $time.earliest$))/800)&lt;1,1,round((relative_time(now(), $time.latest$)-relative_time(now(), $time.earliest$))/800))</eval>
    </progress>
    <done>
      <eval token="seconds_for_bin">if((round(relative_time(now(), $time.latest$)-relative_time(now(), $time.earliest$))/800)&lt;1,1,round((relative_time(now(), $time.latest$)-relative_time(now(), $time.earliest$))/800))</eval>
    </done>
  </search>
  <search id="hot_roll_base">
    <query>index=_internal $selected_indexers$ source=*splunkd.log sourcetype=splunkd component=HotBucketRoller TERM(caller=*) 
| rex field=to "db_(?&lt;to&gt;[0-9]{10})_(?&lt;from&gt;[0-9]{10})" 
| eval duration=to-from 
| table duration size _time caller idx host</query>
    <earliest>$time.earliest$</earliest>
    <latest>$time.latest$</latest>
    <sampleRatio>1</sampleRatio>
    <progress>
      <unset token="hot_roll_base"></unset>
    </progress>
    <done>
      <set token="hot_roll_base">$job.sid$</set>
    </done>
  </search>
  <search id="merge_hot_frozen_report">
    <query>| union 
    [| loadjob $freeze_base$ 
    | eval column="frozen" 
        ] 
    [| loadjob $hot_roll_base$ 
    | eval column="created" 
        ] 
    | table *
</query>
    <earliest>$time.earliest$</earliest>
    <latest>$time.latest$</latest>
  </search>
  <search base="merge_hot_frozen_report" id="merge_hot_frozen_report_per_indexer">
    <query>| stats 
    sparkline(sum(size)) as buckets_created_size_kb 
    sparkline(count(eval(column="created"))) as buckets_created_count 
    sparkline(count(eval(column="frozen"))) as buckets_frozen_count
    count(eval(column="frozen")) as total_frozen
    count(eval(column="created")) as total_created
    by host
    | table *
</query>
  </search>
  <search id="annotations_base">
    <query>| union 
    [ search index=_internal component=CMMaster ((Starting a rolling restart of the peers) OR (restart rolling finished) OR (scheduled rebalance primaries)) 
    | eval annotation_label= case(searchmatch("finished"),"Finished RR", searchmatch("rebalance"), "Trigger Rebalance", searchmatch("Starting"),"Starting RR"), annotation_category= case(searchmatch("finished"),"Finished", searchmatch("rebalance"), "Rebalance", searchmatch("Starting"),"Starting") 
    | table _time anno* _raw
        ] 
    [| tstats count prestats=true where $selected_indexers$ index=_internal sourcetype=splunkd TERM(splunkd) TERM(starting) TERM(build) by _time host span=1s 
    | eval type="startup" 
    | tstats count prestats=true append=true where $selected_indexers$ index=_internal sourcetype=splunkd TERM(ServerConfig) TERM(My) TERM(is) TERM(GUID) TERM(generated) by _time host span=1s 
    | eval type=if(isNull(type),"guid change",type) 
    | tstats count prestats=true append=true where $selected_indexers$ index=_internal sourcetype=splunkd TERM(Shutting) TERM(down) TERM(splunkd) by _time host span=1s 
    | eval type=if(isNull(type),"shutdown",type) 
    | rex field=host "^(?&lt;host_short&gt;[^.]+)" 
    | stats count by host_short type _time 
    | rex field=queue "^(?&lt;queue_short&gt;[^q]+)queue" 
    | eval annotation_label=type." on ".host_short, annotation_category=type 
    | sort - _time 
    | fields _time host_short anno* ] 
    [ search index=_internal host=c0m1* log_level=info TERM(from=*) TERM(to=*) TERM(reason=*) transitioning (up OR down OR restarting) 
    | eval host=peer_name
    | search $selected_indexers$
    | rex field=peer_name "^(?&lt;short_name&gt;[^\.]+)" 
    | eval annotation_label=from."-&gt;".to." ".short_name,
        annotation_category="CMPeer - ".reason 
    | table _time annotation_label annotation_category] 
| table *</query>
    <earliest>$time.earliest$</earliest>
    <latest>$time.latest$</latest>
  </search>
  <search base="annotations_base" id="annotations">
    <query>
            | search $selected_annotations$
          </query>
  </search>
  <fieldset submitButton="false">
    <input type="time" token="time">
      <label></label>
      <default>
        <earliest>-24h@h</earliest>
        <latest>now</latest>
      </default>
      <change>
        <eval token="seconds_for_bin">if((round(relative_time(now(), $time.latest$)-relative_time(now(), $time.earliest$))/800)&lt;1,1,round((relative_time(now(), $time.latest$)-relative_time(now(), $time.earliest$))/800))</eval>
      </change>
    </input>
    <input type="multiselect" token="selected_indexers">
      <label>Select CM, site or hosts</label>
      <choice value="host=idx*">*</choice>
      <delimiter> OR </delimiter>
      <fieldForLabel>label</fieldForLabel>
      <fieldForValue>search</fieldForValue>
      <search>
        <query>index=_internal sourcetype=splunkd CMMaster status=success site* earliest=-4hr latest=now 
| rex field=message max_match=64 "(?&lt;site_pair&gt;site\d+,\"[^\"]+)" 
| eval cluster_master=host 
| fields + site_pair cluster_master 
| fields - _* 
| dedup site_pair 
| mvexpand site_pair 
| dedup site_pair 
| rex field=site_pair "^(?&lt;site_id&gt;site\d+),\"(?&lt;indexer&gt;.*)" 
| rex field=cluster_master "^(?&lt;short_name_cm&gt;[^\.]+)" 
| eval search="host=".indexer, host_count=1
| appendpipe 
    [| stats values(indexer) as indexers by site_id short_name_cm 
    | eval host_count=mvcount(indexers), 
        search="host IN (".mvjoin(mvfilter(indexers!=""), ", ").")" 
    | eval label=site_id." (".host_count." idxs @ ".short_name_cm
        ] 
| appendpipe 
    [| stats values(indexer) as indexers dc(site_id) as site_count by short_name_cm 
    | eval host_count=mvcount(indexers), 
        search="host IN (".mvjoin(mvfilter(indexers!=""), ", ").")" 
    | eval label=short_name_cm." (".host_count." idx ".site_count." sites)" ]
| rex field=indexer "^(?&lt;short_name_idx&gt;[^\.]+)" 
| eval label=if(isnull(label), short_name_idx." (".site_id."@".short_name_cm.")", label)
| stats max(host_count) as count by label search
| sort - count</query>
        <earliest>-24h@h</earliest>
        <latest>now</latest>
      </search>
      <default>host=idx*</default>
    </input>
    <input type="multiselect" token="selected_annotations">
      <label>Select annotation overlay</label>
      <fieldForLabel>annotation_category</fieldForLabel>
      <fieldForValue>annotation_category</fieldForValue>
      <search base="annotations_base">
        <query>| stats count by annotation_category </query>
      </search>
      <default>CMPeer - streaming failure,CMPeer - restart peer</default>
      <prefix>(</prefix>
      <suffix>)</suffix>
      <valuePrefix>annotation_category="</valuePrefix>
      <valueSuffix>"</valueSuffix>
      <delimiter> OR </delimiter>
      <choice value="*">*</choice>
    </input>
  </fieldset>
  <row>
    <panel>
      <title></title>
      <html>
        <h1 style="text-align:center">High level summary</h1>
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <title>Indexes rolling hot buckets</title>
      <single>
        <search base="hot_roll_base">
          <query>| stats dc(idx) as indexes
</query>
        </search>
        <option name="drilldown">all</option>
        <option name="refresh.display">progressbar</option>
        <drilldown>
          <set token="show_index_table">| noop</set>
        </drilldown>
      </single>
    </panel>
    <panel>
      <title>Indexes freezing buckets</title>
      <single>
        <search base="freeze_base">
          <query>| stats dc(idx) as count</query>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </single>
    </panel>
    <panel>
      <title>Hot buckets rolled</title>
      <single>
        <search base="hot_roll_base">
          <query>| stats count</query>
          <done>
            <set token="hot_rolled_count">$result.count$</set>
          </done>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <option name="underLabel">total</option>
      </single>
    </panel>
    <panel>
      <title>Buckets freezing</title>
      <single>
        <search base="freeze_base">
          <query>| stats count</query>
          <done>
            <set token="frozen_rolled_count">$result.count$</set>
          </done>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <option name="underLabel">total</option>
      </single>
    </panel>
    <panel>
      <title>Net change</title>
      <single>
        <title></title>
        <search base="merged_finished">
          <query>| reverse | head 1 | fields + inflation</query>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </single>
    </panel>
  </row>
  <row>
    <panel>
      <title>Reasons for rolling buckets by count</title>
      <chart>
        <search base="hot_roll_base">
          <query>| chart limit=50 count by caller 
| noop</query>
        </search>
        <option name="charting.chart">pie</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="height">373</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <title>Reasons for rolling buckets by size</title>
      <chart>
        <search base="hot_roll_base">
          <query>| chart limit=50 sum(size) as size by caller
| eval size_gb=size/pow(1024,4)
| fields - size</query>
        </search>
        <option name="charting.chart">pie</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="height">373</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <html>
        <h1 style="text-align:center">Buckets creation and freezing over time</h1>
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <title>Rate of change in bucket creation</title>
      <chart>
        <title>Select a time range to drill in and reload page using link below</title>
        <search base="annotations" type="annotation"></search>
        <search base="merge_hot_frozen_report" id="merged_finished">
          <query>| timechart span=$seconds_for_bin$ count by column 
| eval frozen=-frozen, 
    inflation=created+frozen 
| streamstats sum(inflation) as inflation</query>
        </search>
        <selection>
          <set token="merged_earliest">$start$</set>
          <set token="merged_latest">$end$</set>
          <eval token="drilldown_seconds_for_bin">if((round(relative_time(now(), $end$)-relative_time(now(), $start$))/800)&lt;1,1,round((relative_time(now(), $end$)-relative_time(now(), $start$))/800))</eval>
          <eval token="merged_selected_indexers">urlencode($form.selected_indexers$)</eval>
          <eval token="merged_annotations">urlencode($form.annotations$)</eval>
        </selection>
        <option name="charting.axisY2.enabled">1</option>
        <option name="charting.chart">column</option>
        <option name="charting.chart.overlayFields">inflation</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">all</option>
        <option name="charting.legend.placement">top</option>
        <option name="height">513</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <html>
        <h2 style="text-align:center">
        <a target="_blank" rel="noopener noreferrer" href="bucket_roll_analysis?form.time.earliest=$merged_earliest$&amp;form.time.latest=$merged_latest$&amp;form.annotations=$merged_annotations$&amp;form.selected_indexers=$merged_selected_indexers$&amp;form.seconds_for_bin=$drilldown_seconds_for_bin$">Open this dashboard in a new window with the time selection above</a>
        </h2>
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <chart>
        <title>Rolling of buckets over time by caller</title>
        <search base="annotations" type="annotation"></search>
        <search base="hot_roll_base">
          <query>| where _time&gt;=$merged_earliest$ AND _time&lt;=$merged_latest$
| bin _time span=$drilldown_seconds_for_bin$ 
| stats count by caller _time
| xyseries _time caller count</query>
        </search>
        <option name="charting.chart">column</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.placement">top</option>
        <option name="height">373</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>Freezing (removal) of buckets over time</title>
        <search base="annotations" type="annotation"></search>
        <search base="freeze_base">
          <query>| where _time&gt;=$merged_earliest$ AND _time&lt;=$merged_latest$
| bin _time span=$drilldown_seconds_for_bin$ 
| stats count by _time
| eval count=-count</query>
        </search>
        <option name="charting.chart">column</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.placement">none</option>
        <option name="height">373</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <html>
        <h1 style="text-align:center">Per indexer analysis </h1>
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <title>Indexers rolling buckets by count</title>
      <chart>
        <search base="hot_roll_base">
          <query>| where _time&gt;=$merged_earliest$ AND _time&lt;=$merged_latest$
| bin _time span=$drilldown_seconds_for_bin$ 
| chart 
    count
    by host caller
| sort - host</query>
        </search>
        <option name="charting.axisY2.enabled">1</option>
        <option name="charting.chart">column</option>
        <option name="charting.chart.overlayFields">inflation</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.placement">top</option>
        <option name="height">513</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>Indexers rolling buckets by size</title>
      <chart>
        <search base="hot_roll_base">
          <query>| where _time&gt;=$merged_earliest$ AND _time&lt;=$merged_latest$
| bin _time span=$drilldown_seconds_for_bin$ 
| eval size_gb=size/pow(2,16)
| chart 
    sum(size_gb) as size_gb
    by host caller
| sort - host</query>
        </search>
        <option name="charting.axisY2.enabled">1</option>
        <option name="charting.chart">column</option>
        <option name="charting.chart.overlayFields">inflation</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.placement">top</option>
        <option name="height">513</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>Table of all indexes</title>
      <chart>
        <search base="merge_hot_frozen_report_per_indexer">
          <query>| table host *
| sort - host
| eval total_frozen=-total_frozen</query>
        </search>
        <option name="charting.axisY2.enabled">1</option>
        <option name="charting.chart">column</option>
        <option name="charting.chart.overlayFields">inflation</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.placement">top</option>
        <option name="height">513</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <input type="text" token="filter_head_indexes">
        <label>Show top indexes</label>
        <default>20</default>
      </input>
      <html>
        <h1 style="text-align:center">Per index analysis</h1>
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <chart>
        <search base="hot_roll_base">
          <query>| where _time&gt;=$merged_earliest$ AND _time&lt;=$merged_latest$
| bin _time span=$drilldown_seconds_for_bin$ 
| chart limit=50 count by caller idx
| noop</query>
        </search>
        <option name="charting.chart">column</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="height">373</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <chart>
        <search base="hot_roll_base">
          <query>| where _time&gt;=$merged_earliest$ AND _time&lt;=$merged_latest$
| bin _time span=$drilldown_seconds_for_bin$ 
| chart limit=50 sum(size) by caller idx</query>
        </search>
        <option name="charting.chart">column</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="height">373</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>Creation of buckets by index over time</title>
      <chart>
        <search base="hot_roll_base">
          <query>| where _time&gt;=$merged_earliest$ AND _time&lt;=$merged_latest$
| bin _time span=$drilldown_seconds_for_bin$ 
| stats count by idx _time
| xyseries _time idx count</query>
        </search>
        <option name="charting.chart">column</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="height">373</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <chart>
        <title>by count</title>
        <search base="hot_roll_base">
          <query>| where _time&gt;=$merged_earliest$ AND _time&lt;=$merged_latest$
| bin _time span=$drilldown_seconds_for_bin$ 
| chart limit=0 count by idx caller 
| eval total=0
| fillnull value=0
| foreach * 
    [| eval total=total+if("&lt;&lt;FIELD&gt;&gt;"!="idx",&lt;&lt;FIELD&gt;&gt;,0)]
| sort - total
| fields - total
| head $filter_head_indexes$</query>
        </search>
        <option name="charting.chart">bar</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.placement">top</option>
        <option name="height">627</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <chart>
        <title>by size</title>
        <search base="hot_roll_base">
          <query>| where _time&gt;=$merged_earliest$ AND _time&lt;=$merged_latest$
| bin _time span=$drilldown_seconds_for_bin$ 
| chart limit=0 sum(size) as total_size by idx caller 
| eval total=0
| fillnull value=0
| foreach * 
    [| eval total=total+if("&lt;&lt;FIELD&gt;&gt;"!="idx",&lt;&lt;FIELD&gt;&gt;,0)]
| sort - total
| fields - total
| head $filter_head_indexes$</query>
        </search>
        <option name="charting.chart">bar</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.placement">top</option>
        <option name="height">627</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <chart>
        <title>Creation of buckets over time by caller</title>
        <search base="annotations" type="annotation"></search>
        <search base="freeze_base">
          <query>| where _time&gt;=$merged_earliest$ AND _time&lt;=$merged_latest$
| bin _time span=$drilldown_seconds_for_bin$ 
| stats count by idx _time
| xyseries _time idx count</query>
        </search>
        <option name="charting.chart">column</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.placement">top</option>
        <option name="height">598</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
</form>
