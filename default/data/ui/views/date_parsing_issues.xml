<form>
  <label>Date time parsing issues break down</label>
  <init>
    <eval token="seconds_for_bin">if((round(relative_time(now(), $time.latest$)-relative_time(now(), $time.earliest$))/$time_resolution$)&lt;30,30,round((relative_time(now(), $time.latest$)-relative_time(now(), $time.earliest$))/$time_resolution$))</eval>
  </init>
  <search id="baseSearch">
    <query>
      index=_internal sourcetype=splunkd WARN component=DateParserVerbose 
      | eval reason = case(searchmatch("Accepted time format has changed possibly indicating a problem in extracting timestamps"),"Accepted time format has changed possibly indicating a problem in extracting timestamps",
    searchmatch("The TIME_FORMAT specified is matching timestamps outside of the acceptable time window"),"The TIME_FORMAT specified is matching timestamps outside of the acceptable time window",
    searchmatch("A possible timestamp match is outside of the acceptable time window"),"A possible timestamp match is outside of the acceptable time window",
    searchmatch("Failed to parse timestamp. Defaulting to timestamp of previous event"),"Failed to parse timestamp. Defaulting to timestamp of previous event",
    searchmatch("Time parsed is too far away from the previous time"), "Time parsed is too far away from the previous time",
    searchmatch("Accepted time is suspiciously far away from the previous time but still accepted because it was extracted by the same pattern"), "Accepted time is suspiciously far away from the previous time but still accepted because it was extracted by the same pattern",
    searchmatch("Failed to parse timestamp in first MAX_TIMESTAMP_LOOKAHEAD"), "Failed to parse timestamp in first MAX_TIMESTAMP_LOOKAHEAD",
    searchmatch("The TIME_FORMAT specified is matching timestamps outside of the acceptable time window"),"The TIME_FORMAT specified is matching timestamps outside of the acceptable time window",
    searchmatch("The same timestamp has been used for consecutive times. If more than 200K events have the same timestamp, not all events may be retrieveable"), "The same timestamp has been used for consecutive times. If more than 200K events have the same timestamp, not all events may be retrieveable")
| rex field=_raw "Context:\s+source(::|=)(?&lt;naughty_source&gt;[^\|]+)\|host(::|=)(?&lt;naughty_host&gt;[^\|]+)\|(?&lt;naughty_sourcetype&gt;[^\|]+)\|(?&lt;number&gt;\d+)" 
</query>
    <earliest>$time.earliest$</earliest>
    <latest>$time.latest$</latest>
    <sampleRatio>1</sampleRatio>
  </search>
  <search id="baseSearchEvents">
    <query>(index=* OR index=_*) host::$selected_host$ sourcetype::$selected_sourcetype$ source::$selected_source$ _index_earliest=$selected_earliest$ _index_latest=$selected_latest$ 
    | rename _bkt as bucket
|</query>
    <earliest>$selected_earliest$</earliest>
    <latest>$selected_latest$</latest>
  </search>
  <fieldset submitButton="false">
    <input type="time" token="time">
      <label>Select time range</label>
      <default>
        <earliest>-60m@m</earliest>
        <latest>now</latest>
      </default>
      <change>
        <eval token="seconds_for_bin">if((round(relative_time(now(), $time.latest$)-relative_time(now(), $time.earliest$))/$time_resolution$)&lt;30,30,round((relative_time(now(), $time.latest$)-relative_time(now(), $time.earliest$))/$time_resolution$))</eval>
      </change>
    </input>
    <input type="dropdown" token="time_resolution">
      <label>Chart resolution</label>
      <choice value="100">Crude</choice>
      <choice value="250">Low</choice>
      <choice value="500">Medium</choice>
      <choice value="750">High</choice>
      <choice value="999">Ultra</choice>
      <default>500</default>
      <change>
        <eval token="seconds_for_bin">if((round(relative_time(now(), $time.latest$)-relative_time(now(), $time.earliest$))/$time_resolution$)&lt;30,30,round((relative_time(now(), $time.latest$)-relative_time(now(), $time.earliest$))/$time_resolution$))</eval>
      </change>
    </input>
    <input type="text" token="indexer_list">
      <label>Indexer filter override</label>
    </input>
  </fieldset>
  <row>
    <panel>
      <chart>
        <title>Summary of date parsing errors</title>
        <search base="baseSearch">
          <progress>
            <eval token="seconds_for_bin">if((round(relative_time(now(), $time.latest$)-relative_time(now(), $time.earliest$))/$time_resolution$)&lt;30,30,round((relative_time(now(), $time.latest$)-relative_time(now(), $time.earliest$))/$time_resolution$))</eval>
          </progress>
          <query>| timechart span=$seconds_for_bin$sec count by reason</query>
        </search>
        <option name="charting.chart">line</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.placement">top</option>
        <option name="height">337</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>Hosts and source types generating issues $selected_reason$</title>
      <input type="dropdown" token="filter_reason">
        <label>Filter reason</label>
        <fieldForLabel>label</fieldForLabel>
        <fieldForValue>reason</fieldForValue>
        <search base="baseSearch">
          <query>| stats count by reason
| sort - count
| eval label=reason." (".count.")"
| fields label reason</query>
        </search>
        <choice value="*">All</choice>
        <default>*</default>
        <prefix>reason="</prefix>
        <suffix>"</suffix>
      </input>
      <table>
        <title>Drilldown to see what is going on</title>
        <search base="baseSearch">
          <query>| search $filter_reason$
| eval split_by=naughty_sourcetype."|".naughty_host."|".naughty_source."|".host
| eventstats count as all_errors by split_by
| chart
    count as warnings_fired
    by split_by reason
| sort - warnings_fired
| rex field=split_by "(?&lt;naughty_sourcetype&gt;[^|]+)\|(?&lt;naughty_host&gt;[^|]+)\|(?&lt;naughty_source&gt;[^|]+)\|(?&lt;reporting_host&gt;.+)"
| fields - split_by
| table naughty_sourcetype naughty_host naughty_source reporting_host *</query>
        </search>
        <option name="count">10</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">cell</option>
        <option name="percentagesRow">false</option>
        <option name="rowNumbers">false</option>
        <option name="totalsRow">false</option>
        <option name="wrap">true</option>
        <drilldown>
          <set token="selected_sourcetype">$row.naughty_sourcetype$</set>
          <set token="selected_host">$row.naughty_host$</set>
          <set token="selected_source">$row.naughty_source$</set>
          <set token="selected_indexer">$row.reporting_host$</set>
          <unset token="selection_earliest"></unset>
          <unset token="selection_latest"></unset>
          <unset token="selected_bucket"></unset>
        </drilldown>
      </table>
    </panel>
  </row>
  <row depends="$selected_host$">
    <panel>
      <title>Errors for $selected_host$ with source type $selected_sourcetype$ and source $selected_source$</title>
      <input type="text" token="selected_span">
        <label>Seconds to index error</label>
        <default>5</default>
      </input>
      <chart>
        <title>Click on an error to get the events being parsed at that time</title>
        <search base="baseSearch">
          <query>| search TERM($selected_host$) TERM($selected_sourcetype$) TERM($selected_source$)
| timechart span=$seconds_for_bin$sec count by reason</query>
        </search>
        <option name="charting.chart">column</option>
        <option name="charting.drilldown">all</option>
        <option name="refresh.display">progressbar</option>
        <drilldown>
          <eval token="selected_latest">$click.value$+$selected_span$</eval>
          <eval token="selected_earliest">$click.value$</eval>
        </drilldown>
      </chart>
    </panel>
  </row>
  <row depends="$selected_host$">
    <panel>
      <title>Buckets being populated during that time range</title>
      <chart>
        <title>index=* splunk_server=$selected_indexer$ host::$selected_host$ sourcetype::$selected_sourcetype$ source::$selected_source$ _index_earliest=$selected_earliest$ _index_latest=$selected_latest$</title>
        <search base="baseSearchEvents">
          <query>| chart limit=0 count by  splunk_server bucket</query>
        </search>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.chart">column</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.drilldown">all</option>
        <option name="height">303</option>
        <drilldown>
          <set token="selected_bucket">$click.name2$</set>
        </drilldown>
      </chart>
    </panel>
  </row>
  <row depends="$selected_bucket$">
    <panel>
      <title>Events received by Splunk during the period from host=$selected_host$ with sourcetype=$selected_sourcetype$ and source=$selected_source$</title>
      <table>
        <title>$selected_bucket$</title>
        <search base="baseSearchEvents">
          <query>
| where bucket="$selected_bucket$"
| eval delay=_time-_indextime</query>
        </search>
        <option name="drilldown">none</option>
      </table>
    </panel>
  </row>
</form>
