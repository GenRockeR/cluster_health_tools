<form>
  <label>Discovery searches</label>
  <init>
    <set token="seconds_for_bin">62</set>
    <set token="metrics">(index=core_splunk_internal OR index=_internal) Metrics (sourcetype=splunkd OR sourcetype=metrics)</set>
    <set token="splunkd">(index=core_splunk_internal OR index=_internal) sourcetype=splunkd</set>
  </init>
  <fieldset submitButton="false">
    <input type="text" token="selected_internal">
      <label>Override _internal index selection</label>
      <default>index=_internal</default>
    </input>
  </fieldset>
  <row>
    <panel>
      <title>Indexer discovery via REST</title>
      <table>
        <title>This method is flawed in that the REST API doesn't normally query all the SHs or the CM</title>
        <search>
          <query>| rest /services/server/info 
| eval search_head=if(like(server_roles,"%search_head%"),1,0),
    cluster_master=if(like(server_roles,"%cluster_master%"),1,0),
    indexer=if(like(server_roles,"%indexer%"),1,0) 
| stats values(eval(if(search_head=1,host,""))) as search_heads 
    values(eval(if(cluster_master=1,host,""))) as cluster_master 
    values(eval(if(indexer=1,host,""))) as indexer 
    by cluster_label 
| eval search_heads="host IN (".mvjoin(mvfilter(search_heads!=""), ", ").")",
    cluster_master="host IN (".mvjoin(mvfilter(cluster_master!=""), ", ").")",
    indexer="host IN (".mvjoin(mvfilter(indexer!=""), ", ").")"</query>
          <earliest>-2min</earliest>
          <latest>-1min</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Component discovery via roles found in Metrics</title>
      <table>
        <title>This requires over a 60 min scan to get all the events</title>
        <search>
          <query>$selected_internal$ INFO TERM(instance_roles=*) (search_head OR cluster_master OR indexer) sourcetype=splunkd TERM(group=instance) 
| fields host instance_roles index_cluster_label
| eval search_head=if(like(instance_roles,"%search_head%"),1,0),
    cluster_master=if(like(instance_roles,"%cluster_master%"),1,0),
    indexer=if(like(instance_roles,"%indexer%"),1,0) 
| stats values(eval(if(search_head=1,host,""))) as search_heads 
    values(eval(if(cluster_master=1,host,""))) as cluster_master 
    values(eval(if(indexer=1,host,""))) as indexer by index_cluster_label
| eval search_heads="host IN (".mvjoin(mvfilter(search_heads!=""), ", ").")",
    cluster_master="host IN (".mvjoin(mvfilter(cluster_master!=""), ", ").")",
    indexer="host IN (".mvjoin(mvfilter(indexer!=""), ", ").")"</query>
          <earliest>-60m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="count">10</option>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Cluster master from Metrics using "cmmaster_service"</title>
      <table>
        <title>This is efficient in that is requires scanning over 30 seconds</title>
        <search>
          <query>$selected_internal$ Metrics Info TERM(name=cmmaster_service) sourcetype=splunkd TERM(group=subtask_counts)
| stats values(host) as search
| eval search="host IN (".mvjoin(search, ", ").")"  
| fields + search</query>
          <earliest>-2min</earliest>
          <latest>-1min</latest>
        </search>
        <option name="drilldown">none</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Search head cluster members via Metrics</title>
      <table>
        <search>
          <query>index=_internal earliest=-90min latest=now sourcetype=splunkd Metrics TERM(group=instance) TERM(name=instance) (cluster_search_head OR search_head)
| stats 
    count 
    values(instance_roles) as roles 
    values(index_cluster_label) as idx_cluster_name
    by instance_guid server_name 
| eval mv_roles=split(roles, ", ") 
| eval idx_cluster_name=if(idx_cluster_name="none", "", idx_cluster_name)
| stats 
    count(eval(mv_roles="indexer")) as role_indexer
    count(eval(mv_roles="search_peer")) as role_search_peer
    count(eval(mv_roles="cluster_search_head")) as role_cluster_search_head
    count(eval(mv_roles="search_head")) as role_search_head
    count(eval(mv_roles="cluster_slave")) as role_cluster_slave
    count(eval(mv_roles="kv_store")) as role_kv_store_role 
    count(eval(mv_roles="cluster_master")) as role_cluster_master
    count(eval(mv_roles="license_master")) as role_license_master
    count(eval(mv_roles="deployment_server_master")) as role_deployment_server
    count(eval(mv_roles="deployment_client")) as role_deployment_client
    count(eval(mv_roles="shc_captain")) as role_shc_captain
    count(eval(mv_roles="shc_member")) as role_shc_member
    by instance_guid server_name roles idx_cluster_name
| stats values(server_name) as search 
| eval search="host IN ".mvjoin(search, ", ").")"</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </search>
        <option name="count">10</option>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>REST API</title>
      <table>
        <title>Site discovery</title>
        <search>
          <query>| rest /services/cluster/config
| rex field=master_uri "https://(?&lt;cluster_master&gt;[^:]+)"
| stats dc(splunk_server) as host_count values(splunk_server) as indexer by site cluster_master cluster_label
| eval indexer="host IN (".mvjoin(mvfilter(indexer!=""), ", ").")"</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </search>
        <option name="count">10</option>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Sites by CMMaster bucket creation messages</title>
      <input type="time" token="time_site_cmmaster">
        <label></label>
        <default>
          <earliest>-4h@m</earliest>
          <latest>now</latest>
        </default>
      </input>
      <table>
        <title>The time range may vary based on the number of bucket rolls</title>
        <search>
          <query>$selected_internal$ sourcetype=splunkd CMMaster status=success site*
| rex field=message max_match=64 "(?&lt;site_pair&gt;site\d+,\"[^\"]+)"
| eval cluster_master=host
| fields + site_pair cluster_master
| fields - _*
| dedup site_pair
| mvexpand site_pair
| dedup site_pair
| rex field=site_pair "^(?&lt;site_id&gt;site\d+),\"(?&lt;indexer&gt;.*)"
| stats values(indexer) as indexer by site_id cluster_master
| eval host_count=mvcount(indexer), indexer="host IN (".mvjoin(mvfilter(indexer!=""), ", ").")"</query>
          <earliest>$time_site_cmmaster.earliest$</earliest>
          <latest>$time_site_cmmaster.latest$</latest>
        </search>
        <option name="count">10</option>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>The host as reported by dbinspect, great if you don't have access to internal logs or the REST API</title>
      <table>
        <search>
          <query>| dbinspect index=* 
| stats values(splunk_server) as indexer 
| eval host_count=mvcount(indexer), indexer="host IN (".mvjoin(mvfilter(indexer!=""), ", ").")"</query>
          <earliest>-1hr</earliest>
          <latest>now</latest>
        </search>
        <option name="count">10</option>
        <option name="drilldown">none</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <table>
        <title>Get sites and clusters - use for debugging way discovery doesn't work</title>
        <search>
          <query>$splunkd$ CMMaster status=success site* earliest=-4hr latest=now 
| rex field=_raw max_match=64 "(?&lt;site_pair&gt;site\d+,\"?[^\",]+)"
| eval cluster_master=host 
| fields + site_pair cluster_master 
| fields - _* 
| dedup site_pair 
| mvexpand site_pair 
| dedup site_pair 
| rex field=site_pair "^(?&lt;site_id&gt;site\d+),\"?(?&lt;indexer&gt;.*)" 
| rex field=cluster_master "^(?&lt;short_name_cm&gt;[^\.]+)" 
| eval search="host=".indexer, host_count=1
| appendpipe 
    [| stats values(indexer) as indexers by site_id short_name_cm 
    | eval host_count=mvcount(indexers), 
        search="host IN  (".mvjoin(mvfilter(indexers!=""), ", ").")" 
    | eval label=site_id." (".host_count." idxs @ ".short_name_cm
        ] 
| appendpipe 
    [| stats values(indexer) as indexers dc(site_id) as site_count by short_name_cm 
    | eval host_count=mvcount(indexers), 
        search="host IN (".mvjoin(mvfilter(indexers!=""), ", ").")" 
    | eval label=short_name_cm." (".host_count." idx ".site_count." sites)" ]
| rex field=indexer "^(?&lt;short_name_idx&gt;[^\.]+)" 
| eval label=if(isnull(label), short_name_idx." (".site_id."@".short_name_cm.")", label)
| stats max(host_count) as count by label search
| sort 0 - count</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">none</option>
      </table>
    </panel>
  </row>
</form>
